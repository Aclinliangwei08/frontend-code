
# Mac优化配置
worker_processes  auto;  # 自动检测CPU核心数

events {
    worker_connections  1024;
    use kqueue;  # Mac系统优化事件模型
}

http {
    include       mime.types;
    default_type  application/json;

    # Mac系统优化配置
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    
    keepalive_timeout  65;
    
    # 文件上传大小限制
    client_max_body_size 10m;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # 访问日志 (使用相对于nginx -p 参数的路径)
    access_log logs/access.log main;
    error_log logs/error.log;

    # 默认服务器 - 重定向到门户网站
    server {
        listen       80;
        server_name  localhost;
        
        # 重定向到门户网站
        location / {
            return 301 http://localhost:18080;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    # 门户网站服务器
    server {
        listen       18080;
        server_name  localhost;
        
        # 静态文件服务
        location / {
            root html/hmall-portal;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # 缓存静态文件
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # API代理配置
        location /api {
            # 跨域设置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            # 代理设置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            rewrite /api/(.*)  /$1 break;
            proxy_pass http://localhost:8080;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    # 管理后台服务器
    server {
        listen       18081;
        server_name  localhost;
        
        # 静态文件服务
        location / {
            root html/hmall-admin;
            index users.html index.html;
            try_files $uri $uri/ /users.html;
        }

        # 缓存静态文件（放在 server 级别，避免嵌套 location）
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            root html/hmall-admin;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # API代理配置
        location /api {
            # 跨域设置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            # 代理设置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            rewrite /api/(.*)  /$1 break;
            proxy_pass http://localhost:8080;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    # 刷新管理服务器
    server {
        listen       18082;
        server_name  localhost;
        
        # 静态文件服务
        location / {
            root html/hm-refresh-admin;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # 缓存静态文件
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # API代理配置
        location /api {
            # 跨域设置
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            # 代理设置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            rewrite /api/(.*)  /$1 break;
            proxy_pass http://localhost:8080;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    # upstream backend {
    #     server 127.0.0.1:8081 max_fails=5 fail_timeout=10s weight=1;
    #     server 127.0.0.1:8082 max_fails=5 fail_timeout=10s weight=1;
    # }  
}
